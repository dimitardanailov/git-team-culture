#!/bin/bash

# Prepending Your Git Commit Messages with User Story IDs
# https://medium.com/@nicklee1/prepending-your-git-commit-messages-with-user-story-ids-3bfea00eab5a
# https://stackoverflow.com/questions/3525341/can-i-use-a-scripted-commit-template-for-git/3525532#3525532
# https://git-scm.com/docs/githooks
# https://stackoverflow.com/questions/3525341/can-i-use-a-scripted-commit-template-for-git/3525532#3525532
# https://stackoverflow.com/questions/5894946/how-to-add-gits-branch-name-to-the-commit-message

# Include any branches for which you wish to disable this script
if [ -z "$BRANCHES_TO_SKIP" ]; then
    BRANCHES_TO_SKIP=(master develop staging test)
fi

# Get the current branch name and check if it is excluded
BRANCH_NAME=$(git symbolic-ref --short HEAD)
BRANCH_EXCLUDED=$(printf "%s\n" "${BRANCHES_TO_SKIP[@]}" | grep -c "^$BRANCH_NAME$")

# Get the template message
COMMIT_MESSAGE=`cat ~/.gitmessage`

# If it isn't excluded, preprend the trimmed branch identifier to the given message
if [ -n "$BRANCH_NAME" ] &&  ! [[ $BRANCH_EXCLUDED -eq 1 ]]; then
    echo $COMMIT_MESSAGE
fi